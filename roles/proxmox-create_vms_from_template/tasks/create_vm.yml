---
# Assumes _tmpl_vmid and pve_node were set in main.yml
# Accepts either vm.memory_mb or vm.mem_mb; falls back to vm_memory_mb default.

- name: Allocate VMID
  ansible.builtin.command: "pvesh get /cluster/nextid"
  register: _newid
  changed_when: false

- name: Clone from local template
  ansible.builtin.command: >
    qm clone {{ _tmpl_vmid }} {{ _newid.stdout | int }}
    --full 1
    --name {{ vm.hostname }}

- name: Base config (CPU/MEM/NET)
  ansible.builtin.command: >
    qm set {{ _newid.stdout | int }}
    --cores {{ (vm.cores | default(vm_cores | default(2))) | int }}
    --sockets {{ (vm.sockets | default(vm_sockets | default(1))) | int }}
    --memory {{ (vm.memory_mb | default(vm.mem_mb | default(vm_memory_mb | default(4096)))) | int }}
    --net0 virtio,bridge={{ vm.bridge | default(bridge | default('vmbr0')) }}
    --agent 1
    --scsihw virtio-scsi-pci

# Optional: resize root disk if requested (assumes scsi0 root; adjust if your template differs)
- name: Resize disk if requested
  ansible.builtin.command: >
    qm resize {{ _newid.stdout | int }} scsi0 {{ vm.disk_gb }}G
  when: vm.disk_gb is defined

- name: Cloud-init user + SSH key
  ansible.builtin.command: >
    qm set {{ _newid.stdout | int }}
    --ciuser {{ vm.ciuser | default(ciuser | default('ubuntu')) }}
    --sshkey /root/ci_sshkey.pub

- name: Compute cloud-init ipconfig0
  ansible.builtin.set_fact:
    _gw_str: "{{ vm.gw | default(gw, true) | default('', true) | string }}"
    _ipconfig0: >-
      ip={{ vm.ip }}/{{ vm.cidr | default(cidr | default(24)) }}{{ _gw_str and (',gw=' ~ _gw_str) or '' }}
  when: vm.ip is defined

- name: Cloud-init IP (static) if provided
  ansible.builtin.command: >
    qm set {{ _newid.stdout | int }}
    --ipconfig0 {{ _ipconfig0 }}
  when: vm.ip is defined

- name: Start VM
  ansible.builtin.command: "qm start {{ _newid.stdout | int }}"
